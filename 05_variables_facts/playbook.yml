---
#
# 실행 방법 : ansible-playbook playbook.yml --vault-password-file=vault-pass
#
- name: 웹 섭 버 설정 및 확인(인증)
  hosts: ansible1.example.com
  gather_facts: yes
  vars_files:
    - vars/vars.yml
  tasks:
    # 1) 패키지 설치 - httpd, firewalld, mod_ssl
    # 2) 웹 서비스 설정
    # 2-1) /etc/httpd/conf/httpd.conf (file/httpd.conf)
    # 2-2) /var/www/html/.htaccess (files/htaccess)
    # 2-3) /etc/httpd/secrets 디렉토리 생성
    # * /etc/httpd/secrets/htpasswd (files/htpasswd) 파일 배포
    # 2-4 /var/www/html/index.html (using Fact)
    # * ansible1.example.com - ip 
    # 3) 서비스 기동 - firewalld, httpd
    # 4) 방화벽 등록 - http, https
    # 5) 테스트 인증

    # 1) 패키지 설치 - httpd, firewalld, mod_ssl
    - name: 1) 패키지 설치 - httpd, firewalld, mod_ssl
      yum:
        name:
          - "{{ pkg_fw }}"
          - "{{ pkg_http }}"
          - "{{ pkg_https }}"
        state: present

    # 2) 웹 서비스 설정
    # 2-1) /etc/httpd/conf/httpd.conf (file/httpd.conf)
    - name: 2-1) /etc/httpd/conf/httpd.conf (file/httpd.conf)
      copy:
        src: "{{ conf_httpd_src }}"
        dest: "{{ conf_httpd_dest }}"
        owner: root
        group: root
        mode: '0644'

    # 2-2) /var/www/html/.htaccess (files/htaccess)
    - name: 2-2) /var/www/html/.htaccess (files/htaccess)
      copy:
        src: "{{ htaccess_src }}"
        dest: "{{ htaccess_dest }}"
        owner: apache
        group: apache
        mode: '0400'

    # 2-3) /etc/httpd/secrets 디렉토리 생성
    - name: 2-3-1) {{ secrets_dir }} 디렉토리 생성
      file:
        path: "{{ secrets_dir }}"
        state: directory
        owner: apache
        group: apache
        mode: '0700'
    # * /etc/httpd/secrets/htpasswd (files/htpasswd) 파일 배포
    - name: 2-3-2) /etc/httpd/secrets/htpasswd (files/htpasswd) 파일 배포
      copy:
        src: "{{ secrets_src }}"
        dest: "{{ secrets_dest }}"
        owner: apache
        group: apache
        mode: '0400'

    # 2-4 /var/www/html/index.html (using Fact)
    # * ansible1.example.com - ip 
    - name: 2-4 /var/www/html/index.html (using Fact)
      copy:
        content: "Hostname: {{ ansible_hostname }} - IPv4: {{ ansible_default_ipv4.address }}"
        dest: "{{ web_root }}/index.html"
    # 3) 서비스 기동 - firewalld, httpd
    - name: 3) 서비스 기동 - firewalld, httpd
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - "{{ svc_web }}"
        - "{{ svc_fw }}"

    # 4) 방화벽 등록 - http, https
    - name: 4) 방화벽 등록 - http, https
      firewalld:
        service: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      with_items:
        - "{{ fw_http }}"
        - "{{ fw_https }}"

    # 5) 테스트 인증
- name: 5) 테스트 인증
  hosts: localhost
  vars_files:
    - vars/vars2.yml
    - vars/secrets.yml
  tasks:
    - name: Test Web Service wiht Basic Authentication
      uri:
        url: "{{ item }}"
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
      with_items:
        - "{{ request_url1 }}"
        - "{{ request_url2 }}"
    
        
